{"version":3,"sources":["remote.ts"],"names":["KodiPassion","KodiPassion.UI","KodiPassion.UI.RemoteControllerControl","KodiPassion.UI.RemoteControllerControl.constructor","KodiPassion.UI.RemoteControllerControl.processed","KodiPassion.UI.RemoteControllerControl.loadLanguages","KodiPassion.UI.RemoteControllerControl.loadSubtitles"],"mappings":"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","file":"KodiPassion/controls/remote/remote.js","sourcesContent":["module KodiPassion.UI {\r\n\r\n    export class RemoteControllerControl {\r\n        public static url = \"/controls/remote/remote.html\";\r\n\r\n        language: HTMLSelectElement;\r\n        subtitle: HTMLSelectElement;\r\n        rangeVolume: HTMLInputElement;\r\n        rangeSeek: HTMLInputElement;\r\n        eventTracker: WinJSContrib.UI.EventTracker;\r\n\r\n        processed(element, options) {\r\n            KodiPassion.mapKodiApi(element);\r\n            this.loadLanguages();\r\n            this.loadSubtitles();\r\n            this.rangeVolume.onchange = () => {\r\n                var volumeval = parseInt(this.rangeVolume.value);\r\n                Kodi.API.Input.volume(volumeval);\r\n            }\r\n\r\n            this.rangeSeek.onchange = () => {\r\n                var progressval = parseInt(this.rangeSeek.value);\r\n                console.log(\"seek to \" + progressval);\r\n                Kodi.API.Player.seek(Kodi.NowPlaying.current.playerid, progressval).then(function (r) {\r\n                    Kodi.NowPlaying.current.progress = progressval;\r\n                }, function (err) {\r\n                    var e = err;\r\n                });\r\n            }\r\n\r\n            return WinJS.Binding.processAll(element, Kodi.NowPlaying.current);\r\n        }\r\n\r\n        loadLanguages() {\r\n            this.eventTracker.addBinding(Kodi.NowPlaying.current, \"hasLanguages\", () => {\r\n                this.language.innerHTML = \"\";\r\n                if (Kodi.NowPlaying.current.audiostreams) {\r\n                    Kodi.NowPlaying.current.audiostreams.forEach((audiostream) => {\r\n                        var selected = Kodi.NowPlaying.current.currentaudiostream.name == audiostream.name;\r\n                        var o = <HTMLOptionElement>document.createElement(\"OPTION\");\r\n                        o.selected = selected;\r\n                        o.value = audiostream.index;\r\n                        o.innerText = audiostream.name;\r\n                        this.language.appendChild(o);\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n            this.language.onchange = () => {\r\n                var lng = <any>this.language.value;\r\n                if (lng) {\r\n                    lng = parseInt(lng);\r\n                    Kodi.API.Player.setAudioStream(Kodi.NowPlaying.current.playerid, lng).done(() => {\r\n                        Kodi.NowPlaying.check().done((props: any) => {\r\n                            console.log('subtitles changed to ' + props.currentaudiostream.name);\r\n                            this.language.value = props.currentaudiostream.index;\r\n                            //$('.languagelabel', page.element).html(toStaticHTML(props.currentaudiostream.name));\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        loadSubtitles(){\r\n            this.eventTracker.addBinding(Kodi.NowPlaying.current, \"id\", () => {\r\n                this.subtitle.innerHTML = \"\";\r\n                if (Kodi.NowPlaying.current.subtitles) {\r\n                    var o = <HTMLOptionElement>document.createElement(\"OPTION\");\r\n                    o.value = \"off\";\r\n                    o.innerText = \"off\";\r\n                    o.selected = !Kodi.NowPlaying.current.subtitleenabled;\r\n                    this.subtitle.appendChild(o);\r\n\r\n                    Kodi.NowPlaying.current.subtitles.forEach((subtitle) => {\r\n                        var selected = Kodi.NowPlaying.current.currentsubtitle.name == subtitle.name;\r\n                        var o = <HTMLOptionElement>document.createElement(\"OPTION\");\r\n                        o.selected = selected;\r\n                        o.value = subtitle.index;\r\n                        o.innerText = subtitle.name;\r\n                        this.subtitle.appendChild(o);\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n            this.subtitle.onchange = () => {\r\n                var subtitle = <any>this.subtitle.value;\r\n                    if (subtitle) {\r\n                        if (subtitle != 'off')\r\n                            subtitle = parseInt(subtitle);\r\n\r\n                        Kodi.API.Player.setSubtitle(Kodi.NowPlaying.current.playerid, subtitle).done(() => {\r\n                            if (subtitle != 'off' && !Kodi.NowPlaying.current.subtitleenabled) {\r\n                                Kodi.API.Player.setSubtitle(Kodi.NowPlaying.current.playerid, 'on').done(() => {\r\n                                    Kodi.NowPlaying.check().done((props:any) => {\r\n                                        console.log('subtitles changed to ' + props.currentsubtitle.name);\r\n                                        this.subtitle.value = Kodi.NowPlaying.current.currentsubtitle.index;\r\n                                    });\r\n                                });\r\n                            } else {\r\n                                Kodi.NowPlaying.check().done((props:any) => {\r\n                                    if (!props.subtitleenabled) {\r\n                                        console.log('subtitles changed to off');\r\n                                        this.subtitle.value = 'off';\r\n                                    } else {\r\n                                        console.log('subtitles changed to ' + props.currentsubtitle.name);\r\n                                        this.subtitle.value = Kodi.NowPlaying.current.currentsubtitle.index;\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n            }\r\n\r\n            //var subtitles = $('#subtitle', element);\r\n            //subtitles.html('');\r\n            //if (subtitles.length && XBMC.NowPlaying.current.subtitles && XBMC.NowPlaying.current.subtitles.length) {\r\n            //    subtitles.append('<option ' + (XBMC.NowPlaying.current.subtitleenabled ? 'selected' : '') + ' value=\"off\">off</option>')\r\n            //    XBMC.NowPlaying.current.subtitles.forEach(function (subtitle) {\r\n            //        var selected = XBMC.NowPlaying.current.subtitleenabled ? (XBMC.NowPlaying.current.currentsubtitle.name == subtitle.name ? 'selected' : '') : '';\r\n            //        subtitles.append('<option ' + selected + ' value=\"' + subtitle.index + '\">' + subtitle.name + '</option>');\r\n            //    });\r\n            //    subtitles[0].onchange = function () {\r\n            //        var subtitle = subtitles.val();\r\n            //        if (subtitle) {\r\n            //            if (subtitle != 'off')\r\n            //                subtitle = parseInt(subtitle);\r\n\r\n            //            XBMC.API.Player.setSubtitle(XBMC.NowPlaying.current.playerid, subtitle).done(function () {\r\n            //                if (subtitle != 'off' && !XBMC.NowPlaying.current.subtitleenabled) {\r\n            //                    XBMC.API.Player.setSubtitle(XBMC.NowPlaying.current.playerid, 'on').done(function () {\r\n            //                        XBMC.NowPlaying.check().done(function (props) {\r\n            //                            console.log('subtitles changed to ' + props.currentsubtitle.name);\r\n            //                            subtitles.val(XBMC.NowPlaying.current.currentsubtitle.index);\r\n            //                        });\r\n            //                    });\r\n            //                } else {\r\n            //                    XBMC.NowPlaying.check().done(function (props) {\r\n            //                        if (!props.subtitleenabled) {\r\n            //                            console.log('subtitles changed to off');\r\n            //                            subtitles.val('off');\r\n            //                        } else {\r\n            //                            console.log('subtitles changed to ' + props.currentsubtitle.name);\r\n            //                            subtitles.val(XBMC.NowPlaying.current.currentsubtitle.index);\r\n            //                        }\r\n            //                    });\r\n            //                }\r\n            //            });\r\n            //        }\r\n            //    };\r\n            //}\r\n        }\r\n    }\r\n\r\n    export var RemoteController = WinJS.UI.Pages.define(RemoteControllerControl.url, RemoteControllerControl);\r\n}\r\n"],"sourceRoot":" "}